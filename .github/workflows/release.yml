# Copyright (c) 2022 Guilherme Janczak <guilherme.janczak@yandex.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

name: Release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  # keep in sync with msys2 from build-and-test.yml
  windows-build:
    runs-on: windows-latest
    outputs:
      version: ${{steps.installer.outputs.version}}
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        sys: [mingw64, mingw32]
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          path-type: strict
          install: git groff
          pacboy: gcc:p meson:p nsis:p ninja:p jq:p
      - uses: actions/checkout@v2.4.0
      - name: prepare
        run: meson setup -Dbuildtype=release -Dstrip=true build
      - name: installer
        id: installer
        run: |
          ver="$(meson introspect --projectinfo build | jq -r '.version')"
          printf '::set-output name=version::%s\n' "$ver"
          inst="setup-dictpw-${ver}-${{matrix.sys}}.exe"
          inst_mui="setup-mui-dictpw-${ver}-${{matrix.sys}}.exe"
          ./dictpw_installer.sh -o "build/$inst"
          ./dictpw_installer.sh -mo "build/$inst_mui"
          cd ./build
          sha256sum "$inst" > "${inst}.sha256sum"
          sha256sum "$inst_mui" > "${inst_mui}.sha256sum"
      - uses: actions/upload-artifact@v2.3.1
        if: success()
        with:
          name: dist
          path: build/setup*dictpw*
  publish:
    needs: windows-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2.3.1
      - name: setup
        run: pip install meson ninja && sudo apt install libbsd-dev
      - uses: actions/checkout@v2.4.0
      - uses: actions/download-artifact@v2.1.0
      - name: dist
        run: |
          meson setup build
          meson dist -C build
      - name: publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ver="${{needs.windows-build.outputs.version}}"
          gh release create "v$ver" --title "dictpw $ver" \
            --notes-file "docs/CHANGELOG-${ver}.md" \
            --target $GITHUB_SHA dist/* build/meson-dist/*
